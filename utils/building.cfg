#textdomain wesnoth-GambCiv

####-----####----- Layer 1 -----####-----####

#Scrolls to a given hex
#define b_SCROLL_TO
  [scroll_to]
    x,y = $x1,$y1
    check_fogged = true
  [/scroll_to]
#enddef

#Marks a hex as having just been used. You won't be able to use this hex until next turn.
#define b_MARK_MODIFIED
  [store_locations]
    x,y = $x1,$y1
    [or]
      find_in=just_modified
    [/or]
    variable=just_modified
  [/store_locations]
  [item]
    x,y = $x1,$y1
    image = "scenery/rune4-glow.png"
  [/item]
  {b_SCROLL_TO}
#enddef

#Changes the terrain, marks it has modified, and captures the villages (if a village was just built).
#define b_TERRAIN TERRAIN LAYER
  [terrain]
    x,y = $x1,$y1
    terrain = {TERRAIN}
    layer = {LAYER}
  [/terrain]
  [capture_village]
    x,y = $x1,$y1
    side = $side_number
  [/capture_village]
  {b_MARK_MODIFIED}
#enddef

####-----####----- Layer 2 -----####-----####

#Gives a given side resources. Can be used to subtract.
#define b_GIVE_RESOURCES SIDE AP_COST GOLD_COST FOOD_COST MATERIAL_COST
  {VARIABLE_OP side_stats[{SIDE}].action_points add {AP_COST}}
  {VARIABLE_OP side_stats[{SIDE}].food add {FOOD_COST}}
  {VARIABLE_OP side_stats[{SIDE}].material add {MATERIAL_COST}}
  [gold]
    side = {SIDE}
    amount = {GOLD_COST}
  [/gold]
  [store_gold]
    side = {SIDE}
    variable = side_stats[{SIDE}].gold
  [/store_gold]
  [fire_event]
    name = update_resources_label
    [primary_unit]
      side = {SIDE}
      canrecruit = yes
    [/primary_unit]
  [/fire_event]
#enddef

####-----####----- Layer 3 -----####-----####

#A basic option for altering the terrain with a price.
#define b_BASIC_BUILD TERRAIN LAYER AP_COST GOLD_COST FOOD_COST MATERIAL_COST SOUND
[if]
  {c_HAVE_RESOURCES {AP_COST} {GOLD_COST} {FOOD_COST} {MATERIAL_COST}}
  [then]
    {b_TERRAIN {TERRAIN} {LAYER}}
    {b_GIVE_RESOURCES $side_number -{AP_COST} -{GOLD_COST} -{FOOD_COST} -{MATERIAL_COST}}
    {m_SOUND {SOUND}}
  [/then]
  [else]
    {m_RESOURCES_ERROR {AP_COST} {GOLD_COST} {FOOD_COST} {MATERIAL_COST}}
  [/else]
[/if]
#enddef

#Just like b_BASIC_BUILD, but also allows placing an image (like Archery Towers).
#define b_ITEM_BUILD TERRAIN LAYER ITEM AP_COST GOLD_COST FOOD_COST MATERIAL_COST SOUND
[if]
  {c_HAVE_RESOURCES {AP_COST} {GOLD_COST} {FOOD_COST} {MATERIAL_COST}}
  [then]
    {b_TERRAIN {TERRAIN} {LAYER}}
    [item]
      x,y = $x1,$y1
      image = {ITEM}
    [/item]
    {b_GIVE_RESOURCES $side_number -{AP_COST} -{GOLD_COST} -{FOOD_COST} -{MATERIAL_COST}}
    {m_SOUND {SOUND}}
  [/then]
  [else]
    {m_RESOURCES_ERROR {AP_COST} {GOLD_COST} {FOOD_COST} {MATERIAL_COST}}
  [/else]
[/if]
#enddef

#A [message] [option] wrapped around b_BASIC_BUILD.
#define b_BASIC_BUILD_OPTION DESCRIPTION IMAGE TERRAIN LAYER AP_COST GOLD_COST FOOD_COST MATERIAL_COST SOUND
[option]
  message = {MENU_IMG_TXT "{IMAGE}~SCALE(36,36)" {DESCRIPTION}} + " | -{AP_COST} Action | -{GOLD_COST} Gold | -{FOOD_COST} Food | -{MATERIAL_COST} Material"
  [command]
    {b_BASIC_BUILD {TERRAIN} {LAYER} {AP_COST} {GOLD_COST} {FOOD_COST} {MATERIAL_COST} {SOUND}}
  [/command]
[/option]
#enddef

#A [message] [option] wrapped around b_ITEM_BUILD.
#define b_ITEM_BUILD_OPTION DESCRIPTION IMAGE TERRAIN LAYER ITEM AP_COST GOLD_COST FOOD_COST MATERIAL_COST SOUND
[option]
  message = {MENU_IMG_TXT "{IMAGE}~SCALE(36,36)" {DESCRIPTION}} + " | -{AP_COST} Action | -{GOLD_COST} Gold | -{FOOD_COST} Food | -{MATERIAL_COST} Material"
  [command]
    {b_ITEM_BUILD {TERRAIN} {LAYER} {ITEM} {AP_COST} {GOLD_COST} {FOOD_COST} {MATERIAL_COST} {SOUND}}
  [/command]
[/option]
#enddef

####-----####----- Layer 4 -----####-----####
[event]
  name = prestart

  #Destroys a village or castle hex.
 {m_MENU_ITEM_OPENING "za_destroy" ( _ "Destroy") "buttons/group_obstacle.png" {s_TERRAIN_DESTRUCTABLE}}
    [if]
      {VARCH side_stats[$side_number].action_points greater_than 0}
      [then]
	#Ask for confirmation before tearing down villages.
	[if]
	  [have_location]
	    x,y = $x1,$y1
	    terrain = *^V*
	  [/have_location]
	  [then]
	    [message]
	      speaker = narrator
	      message = _ "Are you sure?"
	      [option]
		message = {STR_NO}
	      [/option]
	      [option]
		message = {STR_YES}
		[command]
		  {b_TERRAIN "Rd" both}
		  {m_SOUND "flame-big-miss.ogg"}
		  {b_GIVE_RESOURCES $side_number -1 0 0 0}
		  #Remove the Archery Tower's image if it exists.
		  [remove_item]
		    x,y = $x1,$y1
		    image = "data/campaigns/Son_Of_The_Black_Eye/images/units/orcish-watch-tower.png"
		  [/remove_item]
		[/command]
	      [/option]
	    [/message]
	  [/then]
	  [else]
	    {b_TERRAIN "Rd" both}
	    {m_SOUND "flame-big-miss.ogg"}
	    {b_GIVE_RESOURCES $side_number -1 0 0 0}
	  [/else]
	[/if]
      [/then]
      [else]
	{m_RESOURCES_ERROR 1 0 0 0}
      [/else]
    [/if]
  {m_MENU_ITEM_CLOSING}

  #Converts a castle to a keep.
  {m_MENU_ITEM_OPENING "ab_convertkeep" ( _ "Convert to keep") "buttons/group_castle.png" C*}
    [if]
      {VARCH side_stats[$side_number].action_points greater_than 0}
      [then]
	[store_locations]
	  x,y = $x1,$y1
	  variable=castlehex
	[/store_locations]
	#Split the individual letters of the terrain string. Example: Ch -> C,h
	[set_variables]
	  name=letters
	  [split]
	    list=$castlehex[0].terrain
	    key=letter
	    separator=""
	  [/split]
	[/set_variables]
	#Replace the first letter of the list with a K. Example: C,h -> K,h
	{VARIABLE letters[0].letter "K"}
	#Put the list back togethor. Example: K,h -> Kh
	[set_variable]
	  name=keepterrain
	  [join]
	    variable=letters
	    key=letter
	    separator=""
	  [/join]
	[/set_variable]
	#Place the keep.
	{b_TERRAIN $keepterrain both}
	{m_SOUND "spear.wav"}
	{b_GIVE_RESOURCES $side_number -1 0 0 0}
	{CLEAR_VARIABLE castlehex}
	{CLEAR_VARIABLE letters}
	{CLEAR_VARIABLE keepterrain}
      [/then]
      [else]
	{m_RESOURCES_ERROR 1 0 0 0}
      [/else]
    [/if]
  {m_MENU_ITEM_CLOSING}
[/event]
